{"version":3,"sources":["components/NavbarStyle.js","components/Navbar.js","components/breakpoint.js","theme.js","components/ThemeSwitcher.js","components/ListItem.js","components/ListContents.js","App.js","index.js"],"names":["NavbarWrap","styled","div","Navbar","device","mobileL","themes","bg","font","base","ThemeWrapper","Button","button","RedButton","NeonButton","GreenButton","PurpleButton","ThemeSwitcher","useState","localStorage","getItem","currentTheme","setCurrentTheme","buttons","useRef","useEffect","Array","from","current","children","forEach","buttonElement","classList","remove","id","add","activeSwitcher","document","documentElement","style","setProperty","setItem","switchTheme","ref","onClick","className","ListItemWapper","ListItem","props","item","ListContentWrapper","ListContents","AppWrapper","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ee5297c.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst NavbarWrap = styled.div `\r\n\r\nmax-width: 450px;\r\nmargin :auto;\r\npadding: 2rem;\r\nbackground-color: var(--primary-base);\r\nfont-family: 'Lobster', cursive;\r\nborder-radius : .3rem;\r\ncolor: var(--primary-font);\r\n\r\nh1 {\r\n  margin: 1rem 0;\r\n  text-align: center;\r\n  font-size: 1.4rem;\r\n}\r\n`\r\nexport default NavbarWrap","import React from \"react\";\r\nimport NavbarWrap from './NavbarStyle'\r\n\r\nfunction Navbar() {\r\n  \r\n  return (\r\n    <NavbarWrap>\r\n      <h1>React Theme Switcher</h1>\r\n    </NavbarWrap>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","const size = {\r\n    mobileL : '600px'\r\n}\r\n\r\nexport const device = {\r\n    mobileL : `(max-width: ${size.mobileL})`\r\n}","export const themes = {\r\n    neon : { bg: \"#3080b8\", font : '#b8e0f8', base : '#084870' },\r\n    purple : { bg: \"#323232\", font : '#14ffec', base :'#212121' },\r\n    red : { bg: \"#102038\", font : '#e84060', base :'#181828' },\r\n    green : { bg: \"#283048\", font : '#d8e8f0', base :'#008088' }\r\n}\r\n","import React, { useRef,useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {device} from './breakpoint'\r\nimport {themes} from '../theme'\r\n\r\nconst ThemeWrapper = styled.div `\r\nposition: absolute;\r\nright: 2rem;\r\ntop: 5.5rem;\r\n@media ${device.mobileL} {\r\n    right: 0.5rem;\r\n    top: 0;\r\n}\r\n`\r\nconst Button = styled.button`\r\nmargin: .8rem;\r\npadding: 1rem;\r\nopacity : .2;\r\ndisplay: block;\r\nborder: none;\r\ncursor: pointer;\r\nborder-radius: 5px;\r\ntransition: all .6s;\r\n\r\n&:hover,&.active {\r\n    outline: none;\r\n    opacity:1;\r\n}\r\n`\r\nconst RedButton = styled(Button)`\r\nbackground-color : #e84060;\r\n`\r\nconst NeonButton = styled(Button)`\r\nbackground-color : #b8e0f8;\r\n`\r\nconst GreenButton = styled(Button)`\r\nbackground-color :#d8e8f0;\r\n`\r\nconst PurpleButton = styled(Button)`\r\nbackground-color :#14ffec;\r\n`\r\nfunction ThemeSwitcher() {\r\n    const [currentTheme, setCurrentTheme] = useState(localStorage.getItem('userTheme') ? localStorage.getItem('userTheme') : 'neon')\r\n    \r\n    const switchTheme = (currentTheme) => {\r\n        if (currentTheme === 'red'){\r\n            document.documentElement.style.setProperty('--primary-bg', themes.red.bg)\r\n            document.documentElement.style.setProperty('--primary-font', themes.red.font)\r\n            document.documentElement.style.setProperty('--primary-base', themes.red.base)\r\n        } \r\n        if (currentTheme === 'neon'){\r\n            document.documentElement.style.setProperty('--primary-bg', themes.neon.bg)\r\n            document.documentElement.style.setProperty('--primary-font', themes.neon.font)\r\n            document.documentElement.style.setProperty('--primary-base', themes.neon.base)\r\n        }\r\n        if (currentTheme === 'green'){\r\n            document.documentElement.style.setProperty('--primary-bg', themes.green.bg)\r\n            document.documentElement.style.setProperty('--primary-font', themes.green.font)\r\n            document.documentElement.style.setProperty('--primary-base', themes.green.base)\r\n           \r\n        }\r\n        if (currentTheme === 'purple'){\r\n            document.documentElement.style.setProperty('--primary-bg', themes.purple.bg)\r\n            document.documentElement.style.setProperty('--primary-font', themes.purple.font)\r\n            document.documentElement.style.setProperty('--primary-base', themes.purple.base)\r\n        }\r\n        localStorage.setItem('userTheme', currentTheme)\r\n    }\r\n\r\n    // const classSwitch = (theme) => {\r\n    //     console.log(buttons.current)\r\n    //     const buttonElements = Array.from(buttons.current.children)\r\n    //         buttonElements.forEach(buttonElement =>{\r\n    //             buttonElement.classList.remove('active');\r\n    //             const activeSwitcher = (theme) =>{\r\n    //                 if(theme === buttonElement.id){\r\n    //                     buttonElement.classList.add('active');\r\n    //                 }\r\n    //              }\r\n    //              activeSwitcher(theme)\r\n    //         })\r\n    // }\r\n    const buttons = useRef()\r\n    useEffect(()=>{\r\n        \r\n        const buttonElements = Array.from(buttons.current.children)\r\n        buttonElements.forEach(buttonElement =>{\r\n            buttonElement.classList.remove('active');\r\n            const activeSwitcher = (currentTheme) =>{\r\n                if(currentTheme === buttonElement.id){\r\n                    buttonElement.classList.add('active');\r\n                }\r\n            }\r\n            activeSwitcher(currentTheme)\r\n            switchTheme(currentTheme)\r\n        })\r\n    },[currentTheme])\r\n    // if(localStorage.length > 0){\r\n    //     const seletedTheme = localStorage.getItem('userTheme')\r\n    //     switchTheme(seletedTheme)\r\n    // }\r\n    return (\r\n        <ThemeWrapper ref={buttons}>\r\n            <RedButton id='red' onClick={() => {setCurrentTheme('red')}}> </RedButton>\r\n            <NeonButton id='neon' onClick={() => {setCurrentTheme('neon')}} className='active'></NeonButton>\r\n            <GreenButton id='green' onClick={() =>{setCurrentTheme('green')}}></GreenButton>\r\n            <PurpleButton id='purple' onClick={()=>{setCurrentTheme('purple')}}></PurpleButton>\r\n        </ThemeWrapper>\r\n    )\r\n}\r\n\r\nexport default ThemeSwitcher","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ListItemWapper = styled.div `\r\n    padding: 1rem 1rem;\r\n    margin : .5rem 0;\r\n    border-radius : .3rem;\r\n    font-family: 'Lobster', cursive;\r\n    transition : all 0.6s;\r\n    background-color: var(--primary-base);\r\n    color :var(--primary-font);\r\n    backface-visibility: 0;\r\n\r\n    &:hover {\r\n        transform : scale(1.04);\r\n        cursor: pointer;\r\n    }\r\n`\r\nfunction ListItem(props) {\r\n    return (\r\n        <ListItemWapper>\r\n            {props.item}\r\n        </ListItemWapper>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ListItem from './ListItem'\r\n\r\nconst ListContentWrapper = styled.div`\r\nmax-width: 450px;\r\nheight: 30rem;\r\nmargin: .5rem auto;\r\n`\r\nfunction ListContents() {\r\n    return (\r\n        <ListContentWrapper>\r\n            <ListItem item='With css variables'/>\r\n            <ListItem item='Styled-components'/>\r\n            <ListItem item='useState and useEffect'/>\r\n            <ListItem item='No context'/>\r\n            <ListItem item='local storage enabled'/>\r\n            <ListItem item='Highly adptable'/>\r\n        </ListContentWrapper>\r\n    )\r\n}\r\n\r\nexport default ListContents","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ThemeSwitcher from './components/ThemeSwitcher'\nimport styled from 'styled-components'\nimport ListContents from \"./components/ListContents\";\n\nconst AppWrapper = styled.div `\nmargin: 0;\npadding: .5rem;\nbox-sizing : border-box;\n\n`\nfunction App() {\n  return (\n    <AppWrapper>\n      <ThemeSwitcher />\n      <Navbar />\n      <ListContents />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n   \n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}